= Flippant

A DSL for making DSLs

== What is Flippant?

Flippant is a DSL that you use to build a DSL on top of your existing domain 
objects.
The idea behind it is to seperate the your domain language logic from your 
actual domain logic.
It's DSL does this by decorating your Domain classes with DSL methods. It also 
has support for building DSLs on the fly without any pre-existing domain classes.

It's goal is to be a lightweight and flexible DSL for describing your own DSL.
This is how an DSL specification looks like in Flippant:

#Say you have this
class Movie
  attr_accessor :name
  attr_accessor :actors

  def initialize(name)
    @name = name
    @actors = []
  end

end

class Director 
  attr_accessor :name
end

class Actor
  attr_accessor :name
  
  def initialize(name)
    @name = name
  end

end

#And you describe your DSL like this
Flippant.dsl_method :movie, Movie do

  assign_property_method :name => :directed_by, :property_name => :director, :maps_to => Director

  add_item_method :name => :starring, :maps_to => Actor do 
    add_item_method :name => :also_stars_in, :maps_to => Movie
  end
end

#Then you can do stuff like
fight_club = movie "Fight Club" do
  directed_by :name => "David Fincher"
  starring "Brad Pitt" do
    also_stars_in "Inglourious Basterds"
    also_stars_in "Babel"
  end
  starring "Edward Norton"
end

#You can also use class methods if you prefer
Movie.dsl_method :name => :describe do
  add_item_method :name => :has_actor, :maps_to => Actor do
    add_item_method :name => :also_stars_in, :maps_to => Movie
  end
end

#Argument style DSL methods are also supported
Movie.describe "Pulp Fiction" do |m|
  m.has_actor "Samuel L Jackson"
  m.has_actor "Uma Thurman"
end


=== Whats with the name?

The Meriam-Webster dictionary defines the word Flippant as  _lacking proper respect or seriousness_ 

I think its pretty fitting
